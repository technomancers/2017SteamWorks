plugins {
	id 'io.github.technomancers.gradlerio' version '0.1.17'
}
apply plugin: 'eclipse'
apply plugin: 'idea'


description 'Build and Deploy to the RoboRIO with WPI\'s FRC libraries'

dependencies {
	//Include external dependencies here (Uses maven central)
	compile fileTree(dir: 'libs', include: ['*.jar'])
	riolibs fileTree(dir: 'libs', include: ['*.so'])
	compile 'org.slf4j:slf4j-api:+'
	compile 'ch.qos.logback:logback-classic:+'
	compile 'ch.qos.logback:logback-core:+'
	compile 'org.cfg4j:cfg4j-core:+'
}

gradlerio{
	teamNumber '1758'
	robotClass 'org.usfirst.frc.team1758.robot.Robot'
	rioIP '10.17.58.21'
}

afterEvaluate{ project ->
	def deployConfigs = task('deployConfigs', type: DeployConfigsTask){
		ssh tasks['discover']
		configDir = file('configs/')
	}
	deployConfigs.dependsOn tasks['discover']
	deployConfigs.description 'Deploy the configuration files'
	deployConfigs.group 'RoboRIO'
}

class DeployConfigsTask extends DefaultTask{
	def sshService
	
	@SkipWhenEmpty
	@InputFiles
	@PathSensitive(PathSensitivity.NONE)
	File configDir

	public void ssh(io.github.technomancers.RioTask task){
		sshService = task.ssh
	}

	@TaskAction
	void deployConfigs() {
		sshService.run {
			session(sshService.remotes.rio){
				put from: configDir, into: "~/" 
			}
		}
	}
}

